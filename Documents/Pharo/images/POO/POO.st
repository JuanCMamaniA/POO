Object subclass: #Auto	instanceVariableNames: 'color marca modelo anio cantKmrecorridos matricula'	classVariableNames: ''	package: 'POO'!!Auto methodsFor: 'aplicaciones' stamp: 'Persona 3/24/2023 15:08'!comparar: unAuto	^(self getMatricula =unAuto getMatricula ).! !!Auto methodsFor: 'initialization' stamp: 'Persona 3/24/2023 13:30'!crearMatricula: unaMatricula marca:unaMarca modelo: unModelo anio: unAnio color:unColormatricula :=unaMatricula.modelo := unModelo.marca:=unaMarca.anio := unAnio.color:=unColor .cantKmrecorridos :=0.       ! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/24/2023 12:12'!getMatricula	^ matricula! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/23/2023 16:51'!getCantKlmRecorridos	^cantKmrecorridos .! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/23/2023 16:57'!getMarca^marca.! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/23/2023 16:50'!getModelo	^modelo.! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/24/2023 12:18'!getAnio	^ anio! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/23/2023 16:50'!getColor	^color.! !!Auto methodsFor: 'observadores' stamp: 'Persona 3/24/2023 13:43'!imprimir ^ 'MatrÃ­cula = ', matricula asString, ', Marca :',marca asString,', modelo = ', modelo asString, ',Anio = ', anio asString ,',Color: ',color asString ,',kmRecorridos: ', cantKmrecorridos asString .! !!Auto methodsFor: 'modificadores' stamp: 'Persona 3/24/2023 15:17'!setColor:unColor	color :=unColor .	! !!Auto methodsFor: 'modificadores' stamp: 'Persona 3/24/2023 13:52'!andarKm: unKm	cantKmrecorridos :=cantKmrecorridos asInteger +  unKm asInteger  .		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Auto class	instanceVariableNames: ''!!Auto class methodsFor: 'initialization' stamp: 'Persona 3/24/2023 12:58'!newMatricula: unaMatricula modelo: unModelo anio: unAnio color: unColor    | nuevoAuto |    nuevoAuto := self new.    nuevoAuto matricula: unaMatricula .    nuevoAuto modelo: unModelo.    nuevoAuto anio: unAnio.    nuevoAuto color: unColor.    nuevoAuto cantKmrecorridos: 0.    ^ nuevoAuto! !Object subclass: #Camion	instanceVariableNames: 'matricula tipo KmaActual KmService pesoCarga'	classVariableNames: ''	package: 'POO'!!Camion methodsFor: 'modifcadores' stamp: 'Persona 3/24/2023 15:29'!kmaActual: anObject	KmaActual := anObject! !!Camion methodsFor: 'modifcadores' stamp: 'Persona 3/24/2023 15:30'!pesoCarga: unPesoCarga	pesoCarga := unPesoCarga! !!Camion methodsFor: 'modifcadores' stamp: 'Persona 3/24/2023 15:53'!andarKm: unKm	KmaActual  :=KmaActual  asInteger +  unKm asInteger  .! !!Camion methodsFor: 'initialization' stamp: 'Persona 3/24/2023 15:44'!crearMatricula: unaMatricula tipo:unTipo KmService:unKm pesoCarga:unPeso	matricula :=unaMatricula .	tipo :=unTipo .	KmaActual :=0.	KmService :=unKm .	pesoCarga :=unPeso .^self.	! !!Camion methodsFor: 'observadores' stamp: 'Persona 3/24/2023 15:29'!kmService	^ KmService! !!Camion methodsFor: 'observadores' stamp: 'Persona 3/24/2023 15:29'!tipo	^ tipo! !!Camion methodsFor: 'observadores' stamp: 'Persona 3/24/2023 15:29'!matricula	^ matricula! !!Camion methodsFor: 'observadores' stamp: 'Persona 3/24/2023 15:29'!kmaActual	^ KmaActual! !!Camion methodsFor: 'observadores' stamp: 'Persona 3/24/2023 15:29'!pesoCarga	^ pesoCarga! !!Camion methodsFor: 'observadores' stamp: 'Persona 3/24/2023 15:51'!imprimir ^'Matricula: ',matricula asString,',Tipo: ',tipo asString,',KmActual:',KmaActual asString ,',KmServicio:',KmService asString,',Peso de carga: ',pesoCarga asString.! !!Camion methodsFor: 'aplicasiones' stamp: 'Persona 3/24/2023 15:35'!verificarPeso:unPeso^ unPeso >pesoCarga  .! !!Camion methodsFor: 'aplicasiones' stamp: 'Persona 3/24/2023 15:33'!verificarService^ KmaActual >=KmService .! !Object subclass: #Cliente	instanceVariableNames: 'Dni nombreyapellido telefono tarjetaDecredito fechaVencimiento'	classVariableNames: ''	package: 'POO'!!Cliente methodsFor: 'initialization' stamp: 'Persona 3/24/2023 16:45'!crearDni:unDni nombreyapellido:unNombreyApellido telefono:unTelefono tarjetaDecredito:unaTarjeta fechaVencimiento: unaFechaVencimiento 	Dni :=unDni .	nombreyapellido  :=unNombreyApellido.	telefono :=unTelefono .	tarjetaDecredito :=unaTarjeta .	fechaVencimiento :=unaFechaVencimiento .	! !!Cliente methodsFor: 'modificadores' stamp: 'Persona 3/24/2023 16:50'!setTelefono:unTelefonotelefono :=unTelefono .! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:39'!dni	^ Dni! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:39'!tarjetaDecredito	^ tarjetaDecredito! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:39'!telefono	^ telefono! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:39'!fechaVencimiento	^ fechaVencimiento! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:59'!imprimir ^'Dni:',Dni asString,',Nombre y Apellido:',nombreyapellido asString,',Telefono:',telefono asString,',TarjetaDecredito:',tarjetaDecredito asString,',Fecha Vencimiento:',fechaVencimiento asString.! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:08'!verificarVencimiento^ fechaVencimiento subtractDate: Date today .! !!Cliente methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:39'!nombreyapellido	^ nombreyapellido! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'add' stamp: 'Persona 3/24/2023 16:34'!nuevaConNombre: unNombre edad: unaEdad     | persona |    persona := self new.    persona nombre: unNombre.    persona edad: unaEdad.    persona enBar:false.    ^ persona.! !!Cliente class methodsFor: 'add' stamp: 'Persona 3/24/2023 16:34'!apellido: aString nombre: aString2 edad: anInteger 	self shouldBeImplemented.! !Object subclass: #Persona	instanceVariableNames: 'nombre apellido edad enBar'	classVariableNames: ''	package: 'POO'!!Persona methodsFor: 'observadores' stamp: 'Persona 3/19/2023 11:30'!toString	|texto|	texto:= apellido asString ,' , ', nombre asString. 	^ texto.! !!Persona methodsFor: 'observadores' stamp: 'Persona 3/19/2023 11:04'!apellido	^ apellido! !!Persona methodsFor: 'observadores' stamp: 'Persona 3/19/2023 11:44'!getNombre	^nombre  .! !!Persona methodsFor: 'accessing' stamp: 'Persona 3/20/2023 18:18'!apellido: nApellido nombre:nNombre  edad:  aEdad 	apellido :=nApellido .	nombre :=nNombre .	edad  :=aEdad  .	enBar :=false.	! !!Persona methodsFor: 'propias del tipo' stamp: 'Persona 3/19/2023 11:09'!esMayor	|mayor|	mayor:=false.	mayor :=(18<=edad)		ifTrue: true.	^mayor .	! !!Persona methodsFor: 'propias del tipo' stamp: 'Persona 3/19/2023 11:16'!entrarBar 	|exito|	exito :=false.	(self esMayor )		ifTrue:[enBar :=true.			exito :=true.			].			^exito  .	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'add' stamp: 'Persona 3/24/2023 10:49'!nuevaConNombre: unNombre edad: unaEdad     | persona |    persona := self new.    persona nombre: unNombre.    persona edad: unaEdad.    persona enBar:false.    ^ persona.! !!Persona class methodsFor: 'add' stamp: 'Persona 3/20/2023 18:17'!apellido: aString nombre: aString2 edad: anInteger 	self shouldBeImplemented.! !Object subclass: #Punto	instanceVariableNames: 'x y'	classVariableNames: ''	package: 'POO'!!Punto methodsFor: 'accessing' stamp: 'Persona 3/19/2023 10:54'!y	^ y! !!Punto methodsFor: 'accessing' stamp: 'Persona 3/19/2023 10:54'!x	^ x! !!Punto methodsFor: 'accessing' stamp: 'Persona 3/19/2023 10:54'!y: anObject	y := anObject! !!Punto methodsFor: 'accessing' stamp: 'Persona 3/19/2023 10:54'!x: anObject	x := anObject! !Object subclass: #Vagon	instanceVariableNames: 'anioInstalacion largo ancho peso cantPasjTrasportar'	classVariableNames: ''	package: 'POO'!!Vagon methodsFor: 'initialization' stamp: 'Persona 3/24/2023 16:20'!crearAnio:unAnio largo:unLargo ancho:unAncho cantidadPasajerosTranportar:cantPasajerosanioInstalacion :=unAnio .largo :=unLargo .ancho :=unAncho .peso:=cantPasajeros *80.cantPasjTrasportar :=cantPasajeros .! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:17'!verificarAntiguedad	^  Date today year asInteger -anioInstalacion .! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:14'!largo	^ largo! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:47'!anioInstalacion 	^ anioInstalacion! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:14'!ancho	^ ancho! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:14'!cantPasjTrasportar	^ cantPasjTrasportar! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:14'!peso	^ peso! !!Vagon methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 16:27'!imprimir ^'AnioInstalacion:',anioInstalacion asString,',Largo:',largo asString ,',Ancho:',ancho asString ,',Peso:',peso asString,'cantPasajeros:',cantPasjTrasportar asString.! !PackageManifest subclass: #ManifestPOO	instanceVariableNames: ''	classVariableNames: ''	package: 'POO-Manifest'!!ManifestPOO commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestPOO class	instanceVariableNames: ''!!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 19:34'!ruleReClassNotCategorizedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Auto)) #'2023-03-24T12:19:15.248-03:00') #(#(#RGClassDefinition #(#Persona)) #'2023-03-24T12:19:33.475-03:00') #(#(#RGClassDefinition #(#Fiesta)) #'2023-03-24T18:27:22.055-03:00') #(#(#RGClassDefinition #(#Artista)) #'2023-03-24T19:20:28.474-03:00') #(#(#RGClassDefinition #(#AR)) #'2023-03-24T19:34:03.125-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 17:55'!ruleSentNotImplementedRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Cliente #verificarVencimiento #false)) #'2023-03-24T17:55:33.815-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 4/12/2023 10:49'!ruleEqualsTrueRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Fiesta)) #'2023-04-12T10:49:07.031-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 4/12/2023 11:05'!ruleDetectContainsRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Fiesta)) #'2023-04-12T11:05:09.391-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 13:37'!ruleInconsistentMethodClassificationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Auto #printString #false)) #'2023-03-24T13:37:46.334-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 18:27'!ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Fiesta)) #'2023-03-24T18:27:19.073-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 15:42'!ruleSelfSentNotImplementedRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Auto #equals: #false)) #'2023-03-24T14:41:25.411-03:00') #(#(#RGMethodDefinition #(#Auto #comparar: #false)) #'2023-03-24T14:43:26.799-03:00') #(#(#RGMethodDefinition #(#Camion #crearMatricula:tipo:KmService:pesoCarga: #false)) #'2023-03-24T15:42:49.633-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 18:27'!ruleNoUnusedInstanceVariableRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Fiesta)) #'2023-03-24T18:27:15.452-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 19:13'!ruleExcessiveArgumentsRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Auto)) #'2023-03-24T12:57:27.542-03:00') #(#(#RGMethodDefinition #(#Cliente #crearDni:nombreyapellido:telefono:tarjetaDecredito:fechaVencimiento: #false)) #'2023-03-24T16:45:22.645-03:00') #(#(#RGMethodDefinition #(#Artista #crearNombre:apellido:tipo:dni:telefono:email: #false)) #'2023-03-24T19:13:41.013-03:00') )! !!ManifestPOO class methodsFor: 'code-critics' stamp: 'Persona 3/24/2023 19:33'!ruleClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Auto)) #'2023-03-24T12:19:07.355-03:00') #(#(#RGClassDefinition #(#Persona)) #'2023-03-24T12:19:29.313-03:00') #(#(#RGClassDefinition #(#Fiesta)) #'2023-03-24T18:27:25.689-03:00') #(#(#RGClassDefinition #(#Artista)) #'2023-03-24T19:20:24.858-03:00') #(#(#RGClassDefinition #(#AR)) #'2023-03-24T19:33:57.992-03:00') )! !Object subclass: #Artista	instanceVariableNames: 'tipo nombre apellido dni telefono email'	classVariableNames: ''	package: 'POO-6'!!Artista methodsFor: 'initialization' stamp: 'Persona 3/24/2023 19:13'!crearNombre:unNombre apellido:unApellido tipo:unTipo dni:unDni telefono:unTelefono email:unEmailnombre :=unNombre .apellido :=unApellido .tipo :=unTipo .dni :=unDni .telefono :=unTelefono .email :=unEmail .! !!Artista methodsFor: 'aplicaciones' stamp: 'Persona 3/27/2023 19:24'!equals: unArtista^ dni =unArtista dni .! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:31'!dni	^ dni! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:31'!nombre	^ nombre! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:31'!telefono	^ telefono! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:31'!email	^ email! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 18:31'!apellido	^ apellido! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 4/11/2023 23:34'!toString^'Nombre:',nombre asString ,', Apellido:',apellido ,', Tipo:',tipo asString ,', DNI:',dni asString ,', Telefono:',telefono asString,', Email:',email asString.! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 19:15'!tipo	^ tipo! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 4/11/2023 23:57'!aArtista	^ tipo! !!Artista methodsFor: 'visualizadores' stamp: 'Persona 4/11/2023 23:58'!getTipoArtista	^ tipo! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Artista class	instanceVariableNames: ''!!Artista class methodsFor: 'instance creation' stamp: 'Persona 4/11/2023 23:01'!newNombreArtista:unNombre apellido:unApellido tipo:unTipo dni:unDni telefono:unTelefono email:unEmail|nuevoArtista|nuevoArtista := self new crearNombre:unNombre apellido:unApellido tipo:unTipo dni:unDni telefono:unTelefono email:unEmail.^nuevoArtista .! !!Artista class methodsFor: 'testing' stamp: 'Persona 3/24/2023 19:35'!isAbstract			^ self == Artista! !Object subclass: #Fiesta	instanceVariableNames: 'nombre lugar fechaInicio coleccionArtista artista'	classVariableNames: ''	package: 'POO-6'!!Fiesta methodsFor: 'modificadores' stamp: 'Persona 4/11/2023 23:54'!agrearArtista: unArtista	coleccionArtista add: unArtista .! !!Fiesta methodsFor: 'modificadores' stamp: 'Persona 4/12/2023 10:55'!obtenerFiestasConTipoDeArtista: unArtista|participo tamanioColeccion iteracion|iteracion :=1.participo :=false.tamanioColeccion := coleccionArtista size. [(coleccionArtista notNil) & (iteracion <tamanioColeccion) & (participo = false) ] whileTrue: [   coleccionArtista do: [:art|(art equals: unArtista)ifTrue:[ participo:=true]]].^participo .! !!Fiesta methodsFor: 'modificadores' stamp: 'Persona 4/12/2023 10:51'!haParticipado: unArtista|participo |participo :=false.coleccionArtista do:[:unArt| (unArt equals: unArtista)ifTrue: [ participo :=true ] ].^participo .! !!Fiesta methodsFor: 'modificadores' stamp: 'Persona 3/24/2023 19:41'!artista: anObject	artista := anObject! !!Fiesta methodsFor: 'modificadores' stamp: 'Persona 3/24/2023 19:41'!fechaInicio: anObject	fechaInicio := anObject! !!Fiesta methodsFor: 'modificadores' stamp: 'Persona 4/12/2023 11:09'!participoUnTipo: unTipo	| participo |	participo := false.	coleccionArtista do: [:art |		((art getTipoArtista) = unTipo) ifTrue: [^ true].	].	^ participo.	"| participo indice tamanio|	participo := false.	indice := 1.	tamanio:=coleccionArtista size.	[participo = false and: [indice <=tamanio ]] whileTrue: [		( (coleccionArtista at: indice) getTipoArtista = unTipo)ifTrue: [ participo:= true.] ] .		indice := indice + 1.	].	^ participo."! !!Fiesta methodsFor: 'initialization' stamp: 'Persona 4/11/2023 22:58'!crearNombre: unNombre lugar:unLugar fechaInicio:unaFecha artista: unArtista nombre:=unNombre .lugar :=unLugar .fechaInicio :=unaFecha .artista :=unArtista .coleccionArtista :=OrderedCollection  new.! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 19:41'!nombre	^ nombre! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 19:45'!getEspecialidadArtista ^artista tipo .! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 4/12/2023 10:24'!toString ^ 'NombreFiesta:',nombre asString,', Lugar:',lugar asString ,', FechaInicio:',fechaInicio asString ,', Artista Principal:',artista nombre asString.! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 4/11/2023 23:59'!obtenerArtistasDeTipo:unTipo|listaTipo|listaTipo := coleccionArtista select:[:unArtista| (unArtista getTipoArtista ) =unTipo ].^ listaTipo .! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 19:41'!lugar	^ lugar! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 19:41'!fechaInicio	^ fechaInicio! !!Fiesta methodsFor: 'visualizadores' stamp: 'Persona 3/24/2023 19:41'!artista	^ artista! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Fiesta class	instanceVariableNames: ''!!Fiesta class methodsFor: 'instance creation' stamp: 'Persona 4/11/2023 22:59'!newNombreFiesta: unNombre lugar:unLugar fechaInicio:unaFecha artista: unArtista |nuevaFiesta|nuevaFiesta := self new  crearNombre: unNombre lugar:unLugar fechaInicio:unaFecha artista: unArtista.^nuevaFiesta .! !Object subclass: #Sistema	instanceVariableNames: 'coleccionFiestas'	classVariableNames: ''	package: 'POO-6'!!Sistema methodsFor: 'aplicasiones' stamp: 'Persona 4/12/2023 11:11'!obtenerFiestasConTipoDeArtista:unTipo|nuevalista|nuevalista :=coleccionFiestas select:[:unaFiesta| unaFiesta participoUnTipo: unTipo    ].^nuevalista .! !!Sistema methodsFor: 'aplicasiones' stamp: 'Persona 4/12/2023 00:31'!obtenerFiestasConArtista:unArtista|nuevalista|nuevalista :=coleccionFiestas select:[:unaFiesta| unaFiesta haParticipado: unArtista  ].^nuevalista .! !!Sistema methodsFor: 'aplicasiones' stamp: 'Persona 4/11/2023 23:38'!agregarFiesta:unaFiestacoleccionFiestas add: unaFiesta .! !!Sistema methodsFor: 'initialization' stamp: 'Persona 4/11/2023 23:31'!crearListaFiestascoleccionFiestas :=OrderedCollection  new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sistema class	instanceVariableNames: ''!!Sistema class methodsFor: 'instance creation' stamp: 'Persona 4/11/2023 23:32'!newListaFiestas|fiesta|fiesta := self new crearListaFiestas .^fiesta .! !