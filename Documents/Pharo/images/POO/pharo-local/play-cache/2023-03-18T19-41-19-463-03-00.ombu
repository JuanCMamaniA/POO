OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-18T19:41:30.957-03:00' ],		#self : OmReference [ '1' ]	},	#content : '|mundo numero paridad index suma productos coleccion|.\r\'Unstring\' first:3."subString hasta la posicion 3"\r\'Unstring\' allButFirst: 3."substring desde 3 hasta el final"\r\'Unstring\' copyFrom: 2 to:5. "substring entre la pocion 2 y 5"\r5 between: 6 and:10. "esta entre 6 y 10"\r1 to:5.\rArray with:1  with:\'pepe\' with: nil with:\'String\'." array con los elemntos idicado en witch"\r"Ejemplo if"\rnumero:=11.\r(numero \\\\2)=0\r\tifTrue:[paridad:=0]\r\tifFalse:[paridad :=1].\rTranscript show:\'el numero \',numero asString,\' tiene paridad a \', paridad asString;cr.\r"ejemplo while"\r\r[ index>0]\rwhileTrue: [Transcript show:index;cr.\r\t\tindex:=index-1\r\t].\r"Ejemplo for"\r1 to:10 do:[:index| Transcript show: index;cr  ].\r1 to:10  by:2  do: [ :index |Transcript show:index;cr ].\r25 timesRepeat:[ Transcript show: \'*\' ].\rTranscript cr.\r"do se utiliza con argumento"\rsuma :=0.\r#(2 3 5 7 11 13) do: [:primo"argumento"|suma:=suma+primo  ].\rTranscript show: suma ;cr.\r"collect tambien necesita argumeto"\rproductos :=#(2 3 5 7 11 13)collect:[:primo |primo + primo]."multiplica cada elemenot del arrgeglo por si mismo y agisna dicho valor al arreglo"\rTranscript show: productos ;cr.\r"colecciones SortedCollection sele puede especificar un bloque con argumento como comparador"\rcoleccion :=SortedCollection sortBlock: [:x :y | x size < y size ]."crea una collecion de elementos con un orden que se especifica"\rcoleccion add:\'un string mas largo\' .\rcoleccion add:\'un String\' .\rcoleccion add:#(#un #arry #con @simbolos).\rTranscript show: coleccion ;cr.\r\r'}