OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T19:40:27.44-03:00' ],		#self : OmReference [ '1' ]	},	#content : '[:x :y | x = (10 + y)] value: 21 value: 11.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T19:40:55.361-03:00' ],		#self : OmReference [ '2' ]	},	#content : '[:x :y | x = (10 + y)] \rvalue: 21 \rvalue: 11.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T19:42:48.162-03:00' ],		#self : OmReference [ '3' ]	},	#content : '[:x :y | x = (10 + y)] value: 21 value: 11.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T20:03:31.874-03:00' ],		#self : OmReference [ '4' ]	},	#content : '|x y|\rx:=10.\ry:=5.\r[:x :y | x = (10 + y)] value: 21 value: 11.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T20:04:14.567-03:00' ],		#self : OmReference [ '5' ]	},	#content : ' [:x :y | x = (10 + y)] value: 21 value: 11.'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T20:11:20.463-03:00' ],		#self : OmReference [ '6' ]	},	#content : '|miBloque|\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:05:43.83-03:00' ],		#self : OmReference [ '1' ]	},	#content : '|miBloque|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2.\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:06:06.934-03:00' ],		#self : OmReference [ '2' ]	},	#content : '|miBloque|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2.\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:19:27.11-03:00' ],		#self : OmReference [ '1' ]	},	#content : '|miBloque |\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2.\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:25:40.552-03:00' ],		#self : OmReference [ '1' ]	},	#content : '|miBloque |\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 2.].\rmiBloque value: 2.\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:26:01.462-03:00' ],		#self : OmReference [ '2' ]	},	#content : '|miBloque |\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2.\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:27:39.166-03:00' ],		#self : OmReference [ '3' ]	},	#content : '|miBloque |\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2  value: 4. "exalua si es mayor a+b>c con los value ingresados"\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:27:54.941-03:00' ],		#self : OmReference [ '4' ]	},	#content : '|miBloque |\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:30:14.627-03:00' ],		#self : OmReference [ '5' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: â€˜No son cero\'.].\r(myBlock value: 0 value: 1) ifFalse: myOtherBlock.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:37:37.864-03:00' ],		#self : OmReference [ '6' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifFalse: myOtherBlock.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:38:22.124-03:00' ],		#self : OmReference [ '7' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifTrue: myOtherBlock.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:38:40.836-03:00' ],		#self : OmReference [ '8' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:39:30.703-03:00' ],		#self : OmReference [ '9' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifFalse:  myOtherBlock.\rmyOtherBlock .\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:39:58.009-03:00' ],		#self : OmReference [ '10' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifFalse:  myOtherBlock.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:40:24.657-03:00' ],		#self : OmReference [ '11' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | \r\t|z| z := i. \r\tz := z * z. \r\tz + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "exalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 0.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:40:55.939-03:00' ],		#self : OmReference [ '12' ]	},	#content : '|miBloque myBlock myOtherBlock|\r\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock.\rmyOtherBlock .\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:42:05.663-03:00' ],		#self : OmReference [ '13' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock.\t\rTranscript show: myOtherBlock  .\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:43:05.701-03:00' ],		#self : OmReference [ '14' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock.\t\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:43:50.195-03:00' ],		#self : OmReference [ '15' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\r"Transcript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock.\t"\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:44:39.921-03:00' ],		#self : OmReference [ '16' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:45:40.158-03:00' ],		#self : OmReference [ '17' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r[:n | 0 to: n do:[:i | Transcript show: i printString; cr.]].\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:46:02.627-03:00' ],		#self : OmReference [ '18' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]\r].\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:46:33.725-03:00' ],		#self : OmReference [ '19' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]\r].\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:47:01.811-03:00' ],		#self : OmReference [ '20' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript show: [:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]\r].\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:47:33.397-03:00' ],		#self : OmReference [ '21' ]	},	#content : '|miBloque myBlock myOtherBlock|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r [:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]\r].\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:48:40.511-03:00' ],		#self : OmReference [ '22' ]	},	#content : '|miBloque myBlock myOtherBlock d|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]\rvalue:2.\r].\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:49:09.183-03:00' ],		#self : OmReference [ '23' ]	},	#content : '|miBloque myBlock myOtherBlock d|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]\r\r].\rd value:2.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:49:45.357-03:00' ],		#self : OmReference [ '24' ]	},	#content : '|miBloque myBlock myOtherBlock d|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i+1 printString; cr.]\r\r].\rd value:2.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:51:00.119-03:00' ],		#self : OmReference [ '25' ]	},	#content : '|miBloque myBlock myOtherBlock d|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript clear .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-19T21:52:07.008-03:00' ],		#self : OmReference [ '26' ]	},	#content : '|miBloque myBlock myOtherBlock d|\rmiBloque := [:i | |z| z := i. z := z * z. z + 1.].\rmiBloque value: 2."z es una variable temporal del bloque"\r[:x :y | x = (10 + y)] value: 21 value: 11."valiu = x  , valiu =y  y la igualdad se cumple por lotanto true"\r [:a :b :c | a + b > c.] value: 2 value: 3 value: 4. "evalua si es mayor a+b>c con los value ingresados"\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript cr  .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript cr.\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-20T18:44:47.232-03:00' ],		#self : OmReference [ '1' ]	},	#content : '|miBloque myBlock myOtherBlock d|\r\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript cr  .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript cr.\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-20T18:54:51.813-03:00' ],		#self : OmReference [ '2' ]	},	#content : '|miBloque myBlock myOtherBlock d|\r\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript cr  .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript cr.\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r[:n| |x y| x:=1.y:=[:d | 5].]\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-20T18:55:26.266-03:00' ],		#self : OmReference [ '3' ]	},	#content : '|miBloque myBlock myOtherBlock d|\r\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript cr  .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript cr.\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r[:n| |x y| x:=1.y:=[:d | d+5] value:2.]\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-20T18:56:50.049-03:00' ],		#self : OmReference [ '4' ]	},	#content : '|miBloque myBlock myOtherBlock d|\r\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript cr  .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript cr.\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r[:n| |x y| x:=1.y:=[:d | d+5] value:2. n+x+y]value:0.\r'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-03-20T18:58:03.434-03:00' ],		#self : OmReference [ '5' ]	},	#content : '|miBloque myBlock myOtherBlock d|\r\rmyBlock := [:a :b | |c| c := a + b. c == 1.].\rmyOtherBlock := [Transcript show: \'No son cero\'.].\rTranscript cr  .\r(myBlock value: 0 value: 1) ifTrue:   myOtherBlock."Imprime myOtherBlock si se cumple la condicion"\rTranscript cr.\r d:=[:n | 0 to: n do:\r\t[:i | Transcript show: i printString; cr.]"realiza una repetitiva do de 0 hasta value=2"\r].\rd value:2.\r'}